[0.101s] Invoking command in '/home/user/ros2_ws/build/ydlidar': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/galactic _=/usr/bin/env /usr/bin/cmake /home/user/ros2_ws/src/tortoisebot/ydlidar-ros2 -DCMAKE_INSTALL_PREFIX=/home/user/ros2_ws/install/ydlidar
[4.711s] -- The C compiler identification is GNU 9.4.0
[4.712s] -- The CXX compiler identification is GNU 9.4.0
[4.712s] -- Check for working C compiler: /usr/bin/cc
[4.712s] -- Check for working C compiler: /usr/bin/cc -- works
[4.713s] -- Detecting C compiler ABI info
[4.713s] -- Detecting C compiler ABI info - done
[4.713s] -- Detecting C compile features
[4.714s] -- Detecting C compile features - done
[4.714s] -- Check for working CXX compiler: /usr/bin/c++
[4.714s] -- Check for working CXX compiler: /usr/bin/c++ -- works
[4.715s] -- Detecting CXX compiler ABI info
[4.715s] -- Detecting CXX compiler ABI info - done
[4.715s] -- Detecting CXX compile features
[4.716s] -- Detecting CXX compile features - done
[4.716s] -- Found ament_cmake: 1.1.5 (/opt/ros/galactic/share/ament_cmake/cmake)
[4.716s] -- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") 
[4.717s] -- Using PYTHON_EXECUTABLE: /usr/bin/python3
[4.717s] -- Found rclcpp: 9.2.1 (/opt/ros/galactic/share/rclcpp/cmake)
[5.093s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[5.202s] -- Found rosidl_adapter: 2.2.2 (/opt/ros/galactic/share/rosidl_adapter/cmake)
[5.993s] -- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "1.1.1f")  
[6.097s] -- Found FastRTPS: /opt/ros/galactic/include  
[6.329s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[6.446s] -- Found rmw_implementation_cmake: 3.3.1 (/opt/ros/galactic/share/rmw_implementation_cmake/cmake)
[6.455s] -- Found rmw_cyclonedds_cpp: 0.22.5 (/opt/ros/galactic/share/rmw_cyclonedds_cpp/cmake)
[6.486s] -- Using RMW implementation 'rmw_cyclonedds_cpp' as default
[6.487s] -- Looking for pthread.h
[6.583s] -- Looking for pthread.h - found
[6.583s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
[6.694s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
[6.694s] -- Looking for pthread_create in pthreads
[6.775s] -- Looking for pthread_create in pthreads - not found
[6.776s] -- Looking for pthread_create in pthread
[6.871s] -- Looking for pthread_create in pthread - found
[6.873s] -- Found Threads: TRUE  
[7.119s] -- Found sensor_msgs: 2.2.4 (/opt/ros/galactic/share/sensor_msgs/cmake)
[7.296s] -- Found visualization_msgs: 2.2.4 (/opt/ros/galactic/share/visualization_msgs/cmake)
[7.403s] -- Found ament_lint_auto: 0.10.7 (/opt/ros/galactic/share/ament_lint_auto/cmake)
[7.567s] -- Added test 'copyright' to check source files copyright and LICENSE
[7.592s] -- Added test 'cppcheck' to perform static code analysis on C / C++ code
[7.593s] -- Configured cppcheck include dirs: /home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src;/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include;/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src
[7.593s] -- Configured cppcheck exclude dirs and/or files: 
[7.615s] -- Added test 'cpplint' to check C / C++ code against the Google style
[7.615s] -- Configured cpplint exclude dirs and/or files: 
[7.618s] -- Added test 'flake8' to check Python code syntax and style conventions
[7.624s] -- Added test 'lint_cmake' to check CMake code style
[7.627s] -- Added test 'pep257' to check Python code against some of the style conventions in PEP 257
[7.649s] -- Added test 'uncrustify' to check C / C++ code style
[7.649s] -- Configured uncrustify additional arguments: 
[7.653s] -- Added test 'xmllint' to check XML markup files
[7.659s] -- Configuring done
[7.691s] -- Generating done
[7.695s] -- Build files have been written to: /home/user/ros2_ws/build/ydlidar
[7.708s] Invoked command in '/home/user/ros2_ws/build/ydlidar' returned '0': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/galactic _=/usr/bin/env /usr/bin/cmake /home/user/ros2_ws/src/tortoisebot/ydlidar-ros2 -DCMAKE_INSTALL_PREFIX=/home/user/ros2_ws/install/ydlidar
[7.712s] Invoking command in '/home/user/ros2_ws/build/ydlidar': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/galactic _=/usr/bin/env /usr/bin/cmake --build /home/user/ros2_ws/build/ydlidar -- -j8 -l8
[7.767s] [35m[1mScanning dependencies of target ydlidar_client[0m
[7.767s] [35m[1mScanning dependencies of target ydlidar_node[0m
[7.846s] [  9%] [32mBuilding CXX object CMakeFiles/ydlidar_client.dir/src/ydlidar_client.cpp.o[0m
[7.900s] [ 18%] [32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/CYdLidar.cpp.o[0m
[7.904s] [ 27%] [32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/impl/unix/unix_timer.cpp.o[0m
[7.905s] [ 36%] [32mBuilding CXX object CMakeFiles/ydlidar_node.dir/src/ydlidar_node.cpp.o[0m
[7.906s] [ 45%] [32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/impl/unix/list_ports_linux.cpp.o[0m
[7.910s] [ 54%] [32mBuilding C object CMakeFiles/ydlidar_node.dir/sdk/src/lock.c.o[0m
[7.910s] [ 63%] [32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/impl/unix/unix_serial.cpp.o[0m
[7.995s] [ 72%] [32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/serial.cpp.o[0m
[8.214s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/lock.c:[m[K In function '[01m[Kfhs_lock[m[K':
[8.215s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/lock.c:199:40:[m[K [01;35m[Kwarning: [m[Kunused parameter '[01m[Kpid[m[K' [[01;35m[K-Wunused-parameter[m[K]
[8.215s]   199 | int fhs_lock(const char *filename, [01;35m[Kint pid[m[K) {
[8.215s]       |                                    [01;35m[K~~~~^~~[m[K
[8.215s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/lock.c:[m[K In function '[01m[Kuucp_lock[m[K':
[8.215s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/lock.c:281:41:[m[K [01;35m[Kwarning: [m[Kunused parameter '[01m[Kpid[m[K' [[01;35m[K-Wunused-parameter[m[K]
[8.215s]   281 | int uucp_lock(const char *filename, [01;35m[Kint pid[m[K) {
[8.216s]       |                                     [01;35m[K~~~~^~~[m[K
[8.614s] [ 81%] [32mBuilding CXX object CMakeFiles/ydlidar_node.dir/sdk/src/ydlidar_driver.cpp.o[0m
[9.494s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/timer.h:2[m[K,
[9.494s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/impl/unix/unix_timer.cpp:2[m[K:
[9.494s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:[m[K In function '[01m[Kbool ydlidar::fileExists(std::string)[m[K':
[9.495s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ino[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.495s]   240 |   struct stat info = {0[01;35m[K}[m[K;
[9.495s]       |                        [01;35m[K^[m[K
[9.495s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_nlink[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.496s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mode[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.496s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_uid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.496s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_gid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.496s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__pad0[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.497s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_rdev[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.497s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_size[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.498s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blksize[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.498s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blocks[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.498s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_atim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.498s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mtim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.499s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ctim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[9.499s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__glibc_reserved[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.304s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/serial.h:9[m[K,
[10.304s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/impl/unix/unix_serial.h:9[m[K,
[10.304s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/impl/unix/unix_serial.cpp:39[m[K:
[10.305s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:[m[K In function '[01m[Kbool ydlidar::fileExists(std::string)[m[K':
[10.305s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ino[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.306s]   240 |   struct stat info = {0[01;35m[K}[m[K;
[10.306s]       |                        [01;35m[K^[m[K
[10.306s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_nlink[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.307s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mode[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.307s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_uid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.307s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_gid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.307s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__pad0[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.308s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_rdev[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.308s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_size[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.308s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blksize[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.310s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blocks[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.310s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_atim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.310s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mtim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.311s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ctim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.311s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__glibc_reserved[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.391s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/impl/unix/unix_serial.cpp:[m[K In member function '[01m[Kbool serial::Serial::SerialImpl::setCustomBaudRate(long unsigned int)[m[K':
[10.392s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/impl/unix/unix_serial.cpp:1235:40:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: '[01m[Klong unsigned int[m[K' and '[01m[Kint[m[K' [[01;35m[K-Wsign-compare[m[K]
[10.392s]  1235 |   if ([01;35m[Kserial.custom_divisor * baudrate != serial.baud_base[m[K) {
[10.392s]       |       [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
[10.397s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/serial.h:9[m[K,
[10.397s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/impl/unix/list_ports_linux.cpp:26[m[K:
[10.398s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:[m[K In function '[01m[Kbool ydlidar::fileExists(std::string)[m[K':
[10.398s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ino[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.398s]   240 |   struct stat info = {0[01;35m[K}[m[K;
[10.399s]       |                        [01;35m[K^[m[K
[10.399s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_nlink[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.400s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mode[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.400s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_uid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.400s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_gid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.401s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__pad0[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.401s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_rdev[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.402s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_size[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.402s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blksize[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.402s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blocks[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.403s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_atim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.403s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mtim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.403s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ctim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.404s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__glibc_reserved[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[10.491s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/impl/unix/list_ports_linux.cpp:[m[K In function '[01m[Kstd::vector<std::__cxx11::basic_string<char> > glob(const std::vector<std::__cxx11::basic_string<char> >&)[m[K':
[10.491s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/impl/unix/list_ports_linux.cpp:58:7:[m[K [01;35m[Kwarning: [m[Kvariable '[01m[Kglob_retval[m[K' set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
[10.492s]    58 |   int [01;35m[Kglob_retval[m[K = glob(patterns[0].c_str(), 0, NULL, &glob_results);
[10.492s]       |       [01;35m[K^~~~~~~~~~~[m[K
[11.297s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/serial.h:9[m[K,
[11.297s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/ydlidar_driver.h:54[m[K,
[11.298s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/ydlidar_driver.cpp:34[m[K:
[11.298s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:[m[K In function '[01m[Kbool ydlidar::fileExists(std::string)[m[K':
[11.298s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ino[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.298s]   240 |   struct stat info = {0[01;35m[K}[m[K;
[11.298s]       |                        [01;35m[K^[m[K
[11.298s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_nlink[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.299s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mode[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.299s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_uid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.299s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_gid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.299s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__pad0[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.299s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_rdev[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.300s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_size[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.300s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blksize[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.300s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blocks[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.300s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_atim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.301s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mtim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.301s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ctim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.301s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__glibc_reserved[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.305s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/ydlidar_driver.h:56[m[K,
[11.305s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/ydlidar_driver.cpp:34[m[K:
[11.305s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/thread.h:[m[K In static member function '[01m[Kstatic Thread Thread::createThread(thread_proc_t, void*)[m[K':
[11.306s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/thread.h:43:76:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from '[01m[Kthread_proc_t[m[K' {aka '[01m[Klong unsigned int (*)(void*)[m[K'} to '[01m[Kvoid* (*)(void*)[m[K' [[01;35m[K-Wcast-function-type[m[K]
[11.306s]    43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))[01;35m[Kproc[m[K,
[11.306s]       |                                                                            [01;35m[K^~~~[m[K
[11.391s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/ydlidar_driver.h:58[m[K,
[11.392s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/ydlidar_driver.cpp:34[m[K:
[11.392s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/help_info.h:[m[K In function '[01m[Kbool ydlidar::isSupportMotorCtrl(int)[m[K':
[11.392s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/help_info.h:414:8:[m[K [01;35m[Kwarning: [m[Kvariable '[01m[Kret[m[K' set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
[11.392s]   414 |   bool [01;35m[Kret[m[K = false;
[11.393s]       |        [01;35m[K^~~[m[K
[11.418s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/serial.h:9[m[K,
[11.418s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/ydlidar_driver.h:54[m[K,
[11.418s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/CYdLidar.h:36[m[K,
[11.419s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/CYdLidar.cpp:34[m[K:
[11.419s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:[m[K In function '[01m[Kbool ydlidar::fileExists(std::string)[m[K':
[11.419s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ino[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.419s]   240 |   struct stat info = {0[01;35m[K}[m[K;
[11.420s]       |                        [01;35m[K^[m[K
[11.420s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_nlink[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.420s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mode[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.420s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_uid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.421s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_gid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.421s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__pad0[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.421s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_rdev[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.421s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_size[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.422s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blksize[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.422s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blocks[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.422s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_atim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.422s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mtim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.423s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ctim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.423s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__glibc_reserved[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.493s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/ydlidar_driver.h:56[m[K,
[11.493s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/CYdLidar.h:36[m[K,
[11.493s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/CYdLidar.cpp:34[m[K:
[11.493s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/thread.h:[m[K In static member function '[01m[Kstatic Thread Thread::createThread(thread_proc_t, void*)[m[K':
[11.494s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/thread.h:43:76:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from '[01m[Kthread_proc_t[m[K' {aka '[01m[Klong unsigned int (*)(void*)[m[K'} to '[01m[Kvoid* (*)(void*)[m[K' [[01;35m[K-Wcast-function-type[m[K]
[11.494s]    43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))[01;35m[Kproc[m[K,
[11.494s]       |                                                                            [01;35m[K^~~~[m[K
[11.515s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/ydlidar_driver.h:58[m[K,
[11.516s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/CYdLidar.h:36[m[K,
[11.516s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/CYdLidar.cpp:34[m[K:
[11.516s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/help_info.h:[m[K In function '[01m[Kbool ydlidar::isSupportMotorCtrl(int)[m[K':
[11.516s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/help_info.h:414:8:[m[K [01;35m[Kwarning: [m[Kvariable '[01m[Kret[m[K' set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
[11.517s]   414 |   bool [01;35m[Kret[m[K = false;
[11.517s]       |        [01;35m[K^~~[m[K
[11.523s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/serial.h:9[m[K,
[11.523s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/serial.cpp:11[m[K:
[11.523s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:[m[K In function '[01m[Kbool ydlidar::fileExists(std::string)[m[K':
[11.523s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ino[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.523s]   240 |   struct stat info = {0[01;35m[K}[m[K;
[11.591s]       |                        [01;35m[K^[m[K
[11.591s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_nlink[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.591s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mode[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.592s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_uid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.592s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_gid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.592s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__pad0[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.592s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_rdev[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.592s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_size[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.592s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blksize[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.592s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blocks[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.592s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_atim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.593s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mtim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.593s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ctim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.593s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__glibc_reserved[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[11.623s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/ydlidar_driver.cpp:[m[K In member function '[01m[Kresult_t ydlidar::YDlidarDriver::waitPackage(node_info*, uint32_t)[m[K':
[11.623s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/ydlidar_driver.cpp:992:95:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around arithmetic in operand of '[01m[K|[m[K' [[01;35m[K-Wparentheses[m[K]
[11.624s]   992 |                                          [01;35m[Kpackages.packageSampleDistance[package_Sample_Index] &[m[K
[11.624s]       |                                          [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[11.691s]   993 | [01;35m[K                                         0x0003[m[K)) << LIDAR_RESP_MEASUREMENT_QUALITY_SHIFT;
[11.691s]       |                                          [01;35m[K~~~~~~[m[K                                                
[11.802s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/common.h:47[m[K,
[11.803s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/serial.cpp:12[m[K:
[11.803s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/thread.h:[m[K In static member function '[01m[Kstatic Thread Thread::createThread(thread_proc_t, void*)[m[K':
[11.803s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/thread.h:43:76:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from '[01m[Kthread_proc_t[m[K' {aka '[01m[Klong unsigned int (*)(void*)[m[K'} to '[01m[Kvoid* (*)(void*)[m[K' [[01;35m[K-Wcast-function-type[m[K]
[11.804s]    43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))[01;35m[Kproc[m[K,
[11.804s]       |                                                                            [01;35m[K^~~~[m[K
[12.301s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/CYdLidar.cpp:[m[K In member function '[01m[Kbool CYdLidar::doProcessSimple(LaserScan&, bool&)[m[K':
[12.301s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/src/CYdLidar.cpp:216:23:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: '[01m[Kint[m[K' and '[01m[Ksize_t[m[K' {aka '[01m[Klong unsigned int[m[K'} [[01;35m[K-Wsign-compare[m[K]
[12.301s]   216 |     for (int i = 0; [01;35m[Ki < count[m[K; i++) {
[12.302s]       |                     [01;35m[K~~^~~~~~~[m[K
[14.107s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/serial.h:9[m[K,
[14.107s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/ydlidar_driver.h:54[m[K,
[14.107s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/CYdLidar.h:36[m[K,
[14.107s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:26[m[K:
[14.107s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:[m[K In function '[01m[Kbool ydlidar::fileExists(std::string)[m[K':
[14.108s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ino[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.108s]   240 |   struct stat info = {0[01;35m[K}[m[K;
[14.108s]       |                        [01;35m[K^[m[K
[14.108s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_nlink[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.108s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mode[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.108s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_uid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.109s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_gid[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.109s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__pad0[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.109s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_rdev[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.109s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_size[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.110s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blksize[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.110s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_blocks[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.110s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_atim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.110s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_mtim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.110s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::st_ctim[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.110s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/v8stdint.h:240:24:[m[K [01;35m[Kwarning: [m[Kmissing initializer for member '[01m[Kstat::__glibc_reserved[m[K' [[01;35m[K-Wmissing-field-initializers[m[K]
[14.112s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/ydlidar_driver.h:56[m[K,
[14.113s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/CYdLidar.h:36[m[K,
[14.113s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:26[m[K:
[14.113s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/thread.h:[m[K In static member function '[01m[Kstatic Thread Thread::createThread(thread_proc_t, void*)[m[K':
[14.113s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/thread.h:43:76:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from '[01m[Kthread_proc_t[m[K' {aka '[01m[Klong unsigned int (*)(void*)[m[K'} to '[01m[Kvoid* (*)(void*)[m[K' [[01;35m[K-Wcast-function-type[m[K]
[14.113s]    43 |     pthread_create((pthread_t *)&thread_._handle, NULL, (void *(*)(void *))[01;35m[Kproc[m[K,
[14.113s]       |                                                                            [01;35m[K^~~~[m[K
[14.124s] In file included from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/ydlidar_driver.h:58[m[K,
[14.125s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/CYdLidar.h:36[m[K,
[14.125s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:26[m[K:
[14.125s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/help_info.h:[m[K In function '[01m[Kbool ydlidar::isSupportMotorCtrl(int)[m[K':
[14.125s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/sdk/include/help_info.h:414:8:[m[K [01;35m[Kwarning: [m[Kvariable '[01m[Kret[m[K' set but not used [[01;35m[K-Wunused-but-set-variable[m[K]
[14.125s]   414 |   bool [01;35m[Kret[m[K = false;
[14.125s]       |        [01;35m[K^~~[m[K
[14.136s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:[m[K In function '[01m[Kint main(int, char**)[m[K':
[14.137s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:78:33:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.137s]    78 |   node->declare_parameter("port"[01;35m[K)[m[K;
[14.137s]       |                                 [01;35m[K^[m[K
[14.137s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.138s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.138s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.138s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.138s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.138s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.139s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.139s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:81:37:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.139s]    81 |   node->declare_parameter("frame_id"[01;35m[K)[m[K;
[14.140s]       |                                     [01;35m[K^[m[K
[14.140s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.140s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.140s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.141s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.141s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.141s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.141s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.141s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:84:41:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.142s]    84 |   node->declare_parameter("ignore_array"[01;35m[K)[m[K;
[14.142s]       |                                         [01;35m[K^[m[K
[14.142s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.142s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.142s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.143s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.143s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.143s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.143s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.144s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:87:37:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.144s]    87 |   node->declare_parameter("baudrate"[01;35m[K)[m[K;
[14.144s]       |                                     [01;35m[K^[m[K
[14.144s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.144s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.145s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.145s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.145s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.145s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.145s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.145s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:90:38:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.146s]    90 |   node->declare_parameter("samp_rate"[01;35m[K)[m[K;
[14.146s]       |                                      [01;35m[K^[m[K
[14.146s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.146s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.146s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.146s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.147s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.147s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.147s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.147s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:93:45:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.147s]    93 |   node->declare_parameter("resolution_fixed"[01;35m[K)[m[K;
[14.148s]       |                                             [01;35m[K^[m[K
[14.148s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.148s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.148s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.148s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.149s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.149s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.149s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.149s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:96:42:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.149s]    96 |   node->declare_parameter("singleChannel"[01;35m[K)[m[K;
[14.150s]       |                                          [01;35m[K^[m[K
[14.150s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.150s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.150s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.150s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.151s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.151s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.151s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.151s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:99:43:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.151s]    99 |   node->declare_parameter("auto_reconnect"[01;35m[K)[m[K;
[14.151s]       |                                           [01;35m[K^[m[K
[14.152s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.152s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.152s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.152s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.152s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.152s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.152s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.152s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:102:38:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.153s]   102 |   node->declare_parameter("reversion"[01;35m[K)[m[K;
[14.153s]       |                                      [01;35m[K^[m[K
[14.153s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.153s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.153s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.153s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.153s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.153s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.153s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.154s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:105:39:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.154s]   105 |   node->declare_parameter("isToFLidar"[01;35m[K)[m[K;
[14.154s]       |                                       [01;35m[K^[m[K
[14.154s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.154s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.154s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.154s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.154s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.154s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.155s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.155s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:108:38:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.155s]   108 |   node->declare_parameter("angle_max"[01;35m[K)[m[K;
[14.155s]       |                                      [01;35m[K^[m[K
[14.155s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.155s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.155s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.155s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.155s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.156s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.156s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.156s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:111:38:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.156s]   111 |   node->declare_parameter("angle_min"[01;35m[K)[m[K;
[14.156s]       |                                      [01;35m[K^[m[K
[14.156s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.156s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.156s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.157s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.157s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.157s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.157s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.157s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:114:38:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.157s]   114 |   node->declare_parameter("max_range"[01;35m[K)[m[K;
[14.157s]       |                                      [01;35m[K^[m[K
[14.157s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.157s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.157s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.158s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.158s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.158s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.158s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.158s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:117:38:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.158s]   117 |   node->declare_parameter("min_range"[01;35m[K)[m[K;
[14.158s]       |                                      [01;35m[K^[m[K
[14.158s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.158s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.159s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.159s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.159s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.159s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.159s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.159s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:120:38:[m[K [01;35m[Kwarning: [m[K'[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[K' is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[14.159s]   120 |   node->declare_parameter("frequency"[01;35m[K)[m[K;
[14.159s]       |                                      [01;35m[K^[m[K
[14.159s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[14.160s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[14.160s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[14.160s]                  from [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:23[m[K:
[14.160s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[14.160s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[14.160s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[14.160s] [01m[K/home/user/ros2_ws/src/tortoisebot/ydlidar-ros2/src/ydlidar_node.cpp:208:22:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: '[01m[Kint[m[K' and '[01m[Kstd::vector<LaserPoint>::size_type[m[K' {aka '[01m[Klong unsigned int[m[K'} [[01;35m[K-Wsign-compare[m[K]
[14.160s]   208 |       for(int i=0; [01;35m[Ki < scan.points.size()[m[K; i++) {
[14.160s]       |                    [01;35m[K~~^~~~~~~~~~~~~~~~~~~~[m[K
[17.175s] [ 90%] [32m[1mLinking CXX executable ydlidar_node[0m
[17.420s] [ 90%] Built target ydlidar_node
[20.391s] [100%] [32m[1mLinking CXX executable ydlidar_client[0m
[20.723s] [100%] Built target ydlidar_client
[20.737s] Invoked command in '/home/user/ros2_ws/build/ydlidar' returned '0': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/galactic _=/usr/bin/env /usr/bin/cmake --build /home/user/ros2_ws/build/ydlidar -- -j8 -l8
[20.808s] Invoking command in '/home/user/ros2_ws/build/ydlidar': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/galactic _=/usr/bin/env /usr/bin/cmake --install /home/user/ros2_ws/build/ydlidar
[20.819s] -- Install configuration: ""
[20.820s] -- Installing: /home/user/ros2_ws/install/ydlidar/lib/ydlidar/ydlidar_node
[20.823s] -- Set runtime path of "/home/user/ros2_ws/install/ydlidar/lib/ydlidar/ydlidar_node" to ""
[20.823s] -- Installing: /home/user/ros2_ws/install/ydlidar/lib/ydlidar/ydlidar_client
[20.829s] -- Set runtime path of "/home/user/ros2_ws/install/ydlidar/lib/ydlidar/ydlidar_client" to ""
[20.830s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/launch
[20.830s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/launch/x2_ydlidar_launch.py
[20.830s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/launch/ydlidar.py
[20.830s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/launch/x4_ydlidar_launch.py
[20.830s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/params
[20.831s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/params/ydlidar_x4.yaml
[20.831s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/params/ydlidar_x2.yaml
[20.831s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/startup
[20.831s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/startup/initenv.sh
[20.832s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ament_index/resource_index/package_run_dependencies/ydlidar
[20.832s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ament_index/resource_index/parent_prefix_path/ydlidar
[20.833s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/environment/ament_prefix_path.sh
[20.833s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/environment/ament_prefix_path.dsv
[20.833s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/environment/path.sh
[20.834s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/environment/path.dsv
[20.834s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/local_setup.bash
[20.834s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/local_setup.sh
[20.835s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/local_setup.zsh
[20.835s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/local_setup.dsv
[20.835s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/package.dsv
[20.836s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ament_index/resource_index/packages/ydlidar
[20.836s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/cmake/ydlidarConfig.cmake
[20.836s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/cmake/ydlidarConfig-version.cmake
[20.837s] -- Installing: /home/user/ros2_ws/install/ydlidar/share/ydlidar/package.xml
[20.842s] Invoked command in '/home/user/ros2_ws/build/ydlidar' returned '0': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/opt/ros/galactic _=/usr/bin/env /usr/bin/cmake --install /home/user/ros2_ws/build/ydlidar
