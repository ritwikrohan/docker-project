;; Auto-generated. Do not edit!


(when (boundp 'tf2_web_republisher::TFSubscriptionGoal)
  (if (not (find-package "TF2_WEB_REPUBLISHER"))
    (make-package "TF2_WEB_REPUBLISHER"))
  (shadow 'TFSubscriptionGoal (find-package "TF2_WEB_REPUBLISHER")))
(unless (find-package "TF2_WEB_REPUBLISHER::TFSUBSCRIPTIONGOAL")
  (make-package "TF2_WEB_REPUBLISHER::TFSUBSCRIPTIONGOAL"))

(in-package "ROS")
;;//! \htmlinclude TFSubscriptionGoal.msg.html


(defclass tf2_web_republisher::TFSubscriptionGoal
  :super ros::object
  :slots (_source_frames _target_frame _angular_thres _trans_thres _rate ))

(defmethod tf2_web_republisher::TFSubscriptionGoal
  (:init
   (&key
    ((:source_frames __source_frames) (let (r) (dotimes (i 0) (push "" r)) r))
    ((:target_frame __target_frame) "")
    ((:angular_thres __angular_thres) 0.0)
    ((:trans_thres __trans_thres) 0.0)
    ((:rate __rate) 0.0)
    )
   (send-super :init)
   (setq _source_frames __source_frames)
   (setq _target_frame (string __target_frame))
   (setq _angular_thres (float __angular_thres))
   (setq _trans_thres (float __trans_thres))
   (setq _rate (float __rate))
   self)
  (:source_frames
   (&optional __source_frames)
   (if __source_frames (setq _source_frames __source_frames)) _source_frames)
  (:target_frame
   (&optional __target_frame)
   (if __target_frame (setq _target_frame __target_frame)) _target_frame)
  (:angular_thres
   (&optional __angular_thres)
   (if __angular_thres (setq _angular_thres __angular_thres)) _angular_thres)
  (:trans_thres
   (&optional __trans_thres)
   (if __trans_thres (setq _trans_thres __trans_thres)) _trans_thres)
  (:rate
   (&optional __rate)
   (if __rate (setq _rate __rate)) _rate)
  (:serialization-length
   ()
   (+
    ;; string[] _source_frames
    (apply #'+ (mapcar #'(lambda (x) (+ 4 (length x))) _source_frames)) 4
    ;; string _target_frame
    4 (length _target_frame)
    ;; float32 _angular_thres
    4
    ;; float32 _trans_thres
    4
    ;; float32 _rate
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string[] _source_frames
     (write-long (length _source_frames) s)
     (dolist (elem _source_frames)
       (write-long (length elem) s) (princ elem s)
       )
     ;; string _target_frame
       (write-long (length _target_frame) s) (princ _target_frame s)
     ;; float32 _angular_thres
       (sys::poke _angular_thres (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _trans_thres
       (sys::poke _trans_thres (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _rate
       (sys::poke _rate (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string[] _source_frames
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _source_frames (make-list n))
     (dotimes (i n)
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setf (elt _source_frames i) (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
     ))
   ;; string _target_frame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _target_frame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; float32 _angular_thres
     (setq _angular_thres (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _trans_thres
     (setq _trans_thres (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _rate
     (setq _rate (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get tf2_web_republisher::TFSubscriptionGoal :md5sum-) "b2dae39608227a5c1c4a91ad77023a27")
(setf (get tf2_web_republisher::TFSubscriptionGoal :datatype-) "tf2_web_republisher/TFSubscriptionGoal")
(setf (get tf2_web_republisher::TFSubscriptionGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# goal
string[] source_frames
string target_frame
float32 angular_thres
float32 trans_thres
float32 rate

")



(provide :tf2_web_republisher/TFSubscriptionGoal "b2dae39608227a5c1c4a91ad77023a27")


